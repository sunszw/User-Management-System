<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssmsun.management.dao.UserMapper">
    <resultMap id="UserMap" type="com.ssmsun.management.entity.User">
        <id property="userid" column="userid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="avatar" column="avatar"/>
        <result property="gender" column="gender"/>
        <result property="amount" column="amount"/>
        <result property="credate" column="credate"/>
        <result property="confirm" column="confirm"/>
        <result property="vip" column="vip"/>
    </resultMap>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userid">
        insert into pub_user(username, password, salt, email, phone, gender, avatar, amount, credate, confirm, vip)
        values (#{username}, #{password}, #{salt}, #{email}, #{phone}, #{gender}, #{avatar}, #{amount}, #{credate},
                #{confirm}, #{vip})
    </insert>

    <delete id="delUserByid">
        delete
        from pub_user
        where userid = #{userid}
    </delete>

    <update id="changeStatus">
        update
            pub_user
        set confirm = 1
        where userid = #{userid}
    </update>

    <update id="changePwd">
        update
            pub_user
        set password=#{password}
        where userid = #{userid}
    </update>

    <update id="changeAvatar">
        update
            pub_user
        set avatar=#{avatar}
        where userid = #{userid}
    </update>

    <update id="changeInfoByUserid">
        update
            pub_user
        set email=#{email},
            phone=#{phone},
            gender=#{gender}
        where userid = #{userid}
    </update>

    <select id="getUserByUsername" resultMap="UserMap">
        select userid,
               username,
               password,
               salt
        from pub_user
        where username = #{username}
    </select>

    <select id="getAllUser" resultMap="UserMap">
        select userid,
               username,
               email,
               phone,
               gender,
               amount,
               vip,
               credate,
               confirm
        from pub_user
    </select>

    <select id="getUserTotal" resultType="Integer">
        select count(*)
        from pub_user
    </select>

    <select id="paging" resultMap="UserMap" statementType="STATEMENT">
        select userid,
               username,
               email,
               phone,
               gender,
               amount,
               vip,
               credate,
               confirm
        from
             pub_user
        order by
            userid
        limit
            <choose>
            <when test="page != null">${page},20</when>
            <otherwise>0,20</otherwise>
            </choose>
    </select>

    <select id="person" resultMap="UserMap">
        select userid,
               username,
               password,
               salt,
               email,
               phone,
               gender,
               avatar,
               amount,
               vip,
               credate,
               confirm
        from pub_user
        where userid = #{userid}
    </select>


</mapper>